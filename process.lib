#!/bin/bash
#===========================
#check dependences
_checkDependences 'sshpass' || {
	source /opt/scripts/libs/util.lib || exit
	_checkDependences 'sshpass'
}
_import 'log' 'string' 'criptografia'

_FILE_NAME=$(basename $0)
_DIR_RUN=/opt/scripts/run
_FILE_RUN=$_DIR_RUN/${_FILE_NAME}_${HOSTNAME}.pid
_P=0
__setInExec() {
	_P=$(_getPID)
    [ ${_P:-0} -eq 0 ] && echo "$$|$(hostname -I)|$(date +'%Y-%m-%d %H:%M:%S')" > "$_FILE_RUN" && return 0
	echo "[$_FILE_NAME] in execution with pid [$_P]"; return 1
}

_begin() {	__setInExec || exit 1; }
_end() { [ -f "$_FILE_RUN" ] && rm "$_FILE_RUN"; }

_beginForce() {
	#alow execution, before forced kill
	_P=$(_getPID)
    [ ${_P:-0} -ne 0 ] && kill -9 $_P && _end
	_begin
}

_getPID() {
	[ ! -f "$_FILE_RUN" ] && echo 0 && return 1
    _P=$(cat "$_FILE_RUN" | cut -d'|' -f1) # pega o pid registrado para o processo
	echo "$(ps -p ${_P:-xx} -o cmd= 2>/dev/null)" | fgrep -q "$_FILE_NAME" && echo $_P || echo 0
}

_checkRemoteExec() {
	#check files of another hosts
	ls -1 $_DIR_RUN/${_FILE_NAME}_* | while read FILE; do
		H=$(basename $FILE | sed "s/${_FILE_NAME}_//" | sed 's/\.pid$//' )
		[ "$H" = "$HOSTNAME" ] && continue
		IP=$(head -n1 $FILE | cut -d'|' -f2)
		_P=$(head -n1 $FILE | cut -d'|' -f1)
		H=$(echo $H | _upper)
		SERVER_USER=$(_getVAR "${H}_USER")
		SERVER_PASSWORD=$(_getVAR "${H}_PASSWORD")
		echo $SERVER_PASSWORD
		SERVER_PASSWORD=$(_criptoDec $SERVER_PASSWORD)
		echo $SERVER_PASSWORD
		[ -z "$SERVER_PASSWORD" -o -z "$SERVER_USER" ] && exit
		PID_R=$(sshpass -p"$SERVER_PASSWORD" ssh ${SERVER_USER}@${IP} \
			"ps -p ${_P:-xx} -o cmd= | fgrep -q $_FILE_NAME && echo $_P || echo 0")
		[ ${PID_R:-0} -gt 0 ] && {
			_log "execution in another host|$PID_R|$H|$IP"
			return 0
		}
	done
	return 1
}

_getTimePID() {	ps -p $(_getPID) -o time= ; }
_checkInExec() { [ $(_getPID) -eq 0 ] && return 1 || return 0; }
