#!/bin/bash
#lib for encoding/deconding string for definition
# _setVAR 'CRIPTO_BASE' in /opt/scripts/scripts.conf
#=====================================
[ -z "$_CRIPTO_BASE" ] && {
    _setVAR 'CRIPTO_BASE' 2>/dev/null || {
        source /opt/scripts/libs/util.lib
        _setVAR 'CRIPTO_BASE'
    }
    [ -z "$CRIPTO_BASE" ] && exit || _CRIPTO_BASE="$CRIPTO_BASE"
}
_AZNUM="$(echo {A..Z} {0..9})"
__posCHAR() {
    i=0
    echo "$2" | tr ' ' '\n' | while read CHAR; do
        [ "$1" = "$CHAR" ] && echo "$i" && return 0
        let i++
    done
    return 1
}
_criptoPos() {
    __posCHAR "$1" "$_AZNUM"
}
_criptoPosCifra() {
    __posCHAR "$1" "$_CRIPTO_BASE"
}

_criptoDec() {
    local A="$(echo $1 | _upper)"
    local BASE="$(echo $_AZNUM | tr -d ' ')"
    local TROC=''
    for ((i=0;i<${#A};i++)); do
        #position
        x=$(_criptoPosCifra "${A:$i:1}")
        TROC="${TROC}${BASE:$x:1}"
    done
    echo "$TROC"
}

_criptoEnc() {
    local A="$(echo $1 | _upper)"
    local CIFRA="$(echo $_CRIPTO_BASE | tr -d ' ')"
    local TROC=''
    for ((i=0;i<${#A};i++)); do
        #position
        x=$(_criptoPos "${A:$i:1}")
        TROC="${TROC}${CIFRA:$x:1}"
    done
    echo "$TROC"
}
